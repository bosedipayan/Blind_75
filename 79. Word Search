class Solution {
public:
    int n,m;
    bool dfsCheck(int i,int j,vector<vector<char>>& board,string word,int c)
    {
        if(c==word.size()) return true;
        
        if(i<0 || i>=n || j<0 || j>=m || board[i][j]!=word[c] || board[i][j]=='.')
        {
            return 0;
        }
        
        char ch=board[i][j];
        board[i][j]='.';
        
        bool check=dfsCheck(i-1,j,board,word,c+1) ||
                   dfsCheck(i,j+1,board,word,c+1) ||
                   dfsCheck(i+1,j,board,word,c+1) ||
                   dfsCheck(i,j-1,board,word,c+1);
        
        board[i][j]=ch;
        
        return check;
        
    }
    bool exist(vector<vector<char>>& board, string word) {
        n=board.size();
        m=board[0].size();
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(dfsCheck(i,j,board,word,0))
                {
                    return true;
                }
            }
        }
        return false;
    }
};
