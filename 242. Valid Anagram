class Solution {
public:
    bool isAnagram(string s, string t) {
        /*int res1,res2;
        vector<int> v1,v2;
        
        for(int i=0;i<s.size();i++)
        {
            res1=s[i]-'a';
            v1.push_back(res1);
        }
        
        sort(v1.begin(),v1.end());
        
        for(int i=0;i<t.size();i++)
        {
            res2=t[i]-'a';
            v2.push_back(res2);
        }
        
        sort(v2.begin(),v2.end());
        
        if(v1.size()!=v2.size())
        {
            return false;
        }
        
        for(int j=0;j<v1.size();j++)
        {
            if(v1[j]!=v2[j])
            {
                return false;
            }
        }
        return true;*/
        
        unordered_map<char,int> mp;
        
        for(auto it:s)
        {
            mp[it]++;
        }
        
        for(auto it1:t)
        {
            if(mp.find(it1)!=mp.end())
            {
                mp[it1]-=1;
            }
            else if(mp.find(it1)==mp.end()) return false;
        }
        
        for(auto it:mp)
        {
            if(it.second == 0)
            {
                continue;
            }
            else
            {
                return false;
            }
        }
        return true;
    }
};
